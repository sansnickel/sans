{"version":3,"sources":["assets/Loading.gif","assets/League.png","assets/Wolfram.png","assets/Weather.png","assets/Dictionary.png","assets/Translink.png","components/FactOfTheDay/FactOfTheDay.js","components/APISelect/APISelect.js","components/WolframAlpha/WolframAlpha.js","components/Weather/Weather.js","components/Notes/Notes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","require","FactOfTheDay","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","result","_this2","get","then","res","setState","data","catch","err","console","log","myvar","react_default","a","createElement","className","Component","APISelect","api","changeAPI","bind","assertThisInitialized","newAPI","sendAPI","imageSources","League","concat","LeagueLogo","Wolfram","WolframLogo","Weather","WeatherLogo","Dictionary","DictionaryLogo","Translink","TranslinkLogo","b","c","d","e","g","h","i","j","k","optionList","selected","keys","map","keyName","push","key","type","onClick","onKeyUp","style","backgroundImage","WolframAlpha","loaded","fullResult","handleInputChange","prevProps","prevState","s","query","params","q","event","_this$setState","t","target","value","checked","n","name","defineProperty","onChange","pods","length","title","subpods","src","img","alt","showResult","LoadingLogo","list","dt_txt","weather","description","Notes","notes","handleChange","tempNotes","toConsumableArray","index","findIndex","note","_id","getAttribute","content","_this3","listNotes","myid","defaults","baseURL","App","submittedQuery","handleSubmit","setAPI","preventDefault","mainComponent","_this$state","components_WolframAlpha_WolframAlpha","components_Weather_Weather","components_APISelect_APISelect","onSubmit","placeholder","components_FactOfTheDay_FactOfTheDay","components_Notes_Notes","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62822483.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Loading.0d0345f6.gif\";","module.exports = __webpack_public_path__ + \"static/media/League.059ada60.png\";","module.exports = __webpack_public_path__ + \"static/media/Wolfram.f0499e49.png\";","module.exports = __webpack_public_path__ + \"static/media/Weather.1e179f55.png\";","module.exports = __webpack_public_path__ + \"static/media/Dictionary.48c2d1b5.png\";","module.exports = __webpack_public_path__ + \"static/media/Translink.f0269dcc.png\";","import React, { Component } from 'react';\nimport './FactOfTheDay.scss';\n\nconst axios = require('axios');\n\nclass FactOfTheDay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { result: 'test' };\n  }\n\n  componentDidMount() {\n    axios.get('/randomfact')\n      .then(res => this.setState({ result: res.data }))\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    const myvar = this.state;\n    return (\n      <div className=\"FactOfTheDay\">\n        <div className=\"FactOfTheDay__title\">\n          Fact Of The Day\n        </div>\n        <div className=\"FactOfTheDay__content\">\n          { myvar.result }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FactOfTheDay;\n","import React, { Component } from 'react';\nimport './APISelect.scss';\nimport LeagueLogo from '../../assets/League.png';\nimport WolframLogo from '../../assets/Wolfram.png';\nimport WeatherLogo from '../../assets/Weather.png';\nimport DictionaryLogo from '../../assets/Dictionary.png';\nimport TranslinkLogo from '../../assets/Translink.png';\n\n\n// const axios = require('axios');\n\nclass APISelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { api: '' };\n    this.changeAPI = this.changeAPI.bind(this);\n  }\n\n  changeAPI(newAPI) {\n    const api = this.props;\n    api.sendAPI(newAPI);\n    this.setState({ api: newAPI });\n  }\n\n  render() {\n    const imageSources = {\n      League: `url( ${LeagueLogo} )`,\n      Wolfram: `url( ${WolframLogo} )`,\n      Weather: `url( ${WeatherLogo} )`,\n      Dictionary: `url( ${DictionaryLogo} )`,\n      Translink: `url( ${TranslinkLogo} )`,\n      a: `url( ${LeagueLogo} )`,\n      b: `url( ${WolframLogo} )`,\n      c: `url( ${WeatherLogo} )`,\n      d: `url( ${DictionaryLogo} )`,\n      e: `url( ${TranslinkLogo} )`,\n      g: `url( ${LeagueLogo} )`,\n      h: `url( ${WolframLogo} )`,\n      i: `url( ${WeatherLogo} )`,\n      j: `url( ${DictionaryLogo} )`,\n      k: `url( ${TranslinkLogo} )`,\n    };\n\n    const optionList = [];\n    const selected = this.state;\n\n    Object.keys(imageSources).map(\n      keyName => optionList.push(<button\n        key={keyName}\n        className={selected.api === keyName ? 'selected' : ''}\n        type=\"button\"\n        onClick={() => this.changeAPI(keyName)}\n        onKeyUp={() => this.changeAPI(keyName)}\n        style={{ backgroundImage: imageSources[keyName] }}\n      />),\n    );\n\n    return (\n      <div className=\"APISelect\">\n        {optionList}\n      </div>\n    );\n  }\n}\n\nexport default APISelect;\n","import React, { Component } from 'react';\nimport './WolframAlpha.scss';\nimport LoadingLogo from '../../assets/Loading.gif';\n\nconst axios = require('axios');\n\nclass WolframAlpha extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result: '',\n      loaded: false,\n      fullResult: false,\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loaded: true });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const p = this.props;\n    const s = this.state;\n\n    if (p.query && ((prevProps.query !== p.query) || (prevState.fullResult !== s.fullResult))) {\n      this.setState({ loaded: false });\n      if (s.fullResult !== true) {\n        axios.get('/wolfram', {\n          params: {\n            q: p.query,\n          },\n        }).then((res) => {\n          this.setState({\n            result: res.data,\n            loaded: true,\n          });\n          console.log(res);\n        }).catch((err) => {\n          console.log(err);\n        });\n      } else {\n        axios.get('/wolfram2', {\n          params: {\n            q: p.query,\n          },\n        }).then((res) => {\n          this.setState({\n            result: res.data,\n            loaded: true,\n          });\n          console.log(res);\n        }).catch((err) => {\n          console.log(err);\n        });\n      }\n    }\n  }\n\n  handleInputChange(event) {\n    const e = event;\n    const t = e.target;\n    const value = t.type === 'checkbox' ? t.checked : t.value;\n    const n = t.name;\n\n    this.setState({\n      [n]: value,\n      loaded: false,\n    });\n  }\n\n  render() {\n    const s = this.state;\n    function showLogo() {\n      return <img src={LoadingLogo} alt=\"\" />;\n    }\n    function showResult() {\n      if (s.fullResult !== true) {\n        return s.result;\n      }\n\n      const pods = [];\n      for (let i = 0; i < s.result.length; i += 1) {\n        pods.push(<h2>{s.result[i].title}</h2>);\n        for (let j = 0; j < s.result[i].subpods.length; j += 1) {\n          pods.push(<img src={s.result[i].subpods[j].img.src} alt=\"\" />);\n        }\n      }\n      return pods;\n    }\n\n    return (\n      <div className=\"WolframComponent\">\n        <input name=\"fullResult\" type=\"checkbox\" checked={s.fullResult} onChange={this.handleInputChange} />\n          Show Full Result?\n        { s.loaded === true ? showResult() : showLogo() }\n      </div>\n    );\n  }\n}\n\nexport default WolframAlpha;\n","import React, { Component } from 'react';\nimport './Weather.scss';\nimport LoadingLogo from '../../assets/Loading.gif';\n\nconst axios = require('axios');\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result: '',\n      loaded: false,\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loaded: true });\n  }\n\n  componentDidUpdate(prevProps) {\n    const p = this.props;\n\n    if (p.query && ((prevProps.query !== p.query))) {\n      this.setState({ loaded: false });\n      axios.get('/weather', {\n        params: {\n          q: p.query,\n        },\n      }).then((res) => {\n        this.setState({\n          result: res.data,\n          loaded: true,\n        });\n        console.log(res);\n      }).catch((err) => {\n        console.log(err);\n      });\n    }\n  }\n\n  handleInputChange(event) {\n    const e = event;\n    const t = e.target;\n    const value = t.type === 'checkbox' ? t.checked : t.value;\n    const n = t.name;\n\n    this.setState({\n      [n]: value,\n      loaded: false,\n    });\n  }\n\n  render() {\n    const s = this.state;\n    function showLogo() {\n      return <img src={LoadingLogo} alt=\"\" />;\n    }\n    function showResult() {\n      const pods = [];\n      const data = s.result.list;\n      if (data) {\n        for (let i = 0; i < data.length; i += 1) {\n          pods.push(<h2>{data[i].dt_txt}</h2>);\n          pods.push(<h2>{data[i].weather[0].description}</h2>);\n        }\n      }\n      return pods;\n    }\n\n    return (\n      <div className=\"WeatherComponent\">\n        { s.loaded === true ? showResult() : showLogo() }\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n","import React, { Component } from 'react';\nimport './Notes.scss';\n\nconst axios = require('axios');\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { notes: [] };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('/notes')\n      .then((res) => {\n        this.setState({ notes: res.data });\n        const s = this.state;\n        this.tempNotes = [...s.notes];\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleChange(event) {\n    const s = this.state;\n    const index = s.notes.findIndex(note => note._id === event.target.getAttribute('myid'));\n    const tempNotes = [...s.notes];\n    tempNotes[index].content = event.target.value;\n    this.setState({ notes: tempNotes });\n  }\n\n  render() {\n    const s = this.state;\n    const listNotes = s.notes.map(\n      note => (\n        <textarea\n          key={note._id}\n          myid={note._id} \n          value={note.content}\n          onChange={this.handleChange}\n        />\n      ),\n    );\n\n    return (\n      <div className=\"Notes\">\n        <div className=\"Notes__content\">\n          { listNotes }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Notes;\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.scss';\nimport axios from 'axios';\nimport FactOfTheDay from './components/FactOfTheDay/FactOfTheDay';\nimport APISelect from './components/APISelect/APISelect';\nimport WolframAlpha from './components/WolframAlpha/WolframAlpha';\nimport Weather from './components/Weather/Weather';\nimport Notes from './components/Notes/Notes';\n\nif (process.env.NODE_ENV === 'production') axios.defaults.baseURL = '192.168.0.45:3001';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      submittedQuery: '',\n      api: 'League',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setAPI = this.setAPI.bind(this);\n  }\n\n  setAPI(data) {\n    this.setState({ api: data });\n    this.setState({ submittedQuery: '' });\n  }\n\n  handleChange(event) {\n    this.setState({ query: event.target.value });\n  }\n\n  handleSubmit(event) {\n    this.setState(prevState => ({ submittedQuery: prevState.query }));\n    event.preventDefault();\n  }\n\n  render() {\n    const { submittedQuery, query, api } = this.state;\n    let mainComponent;\n\n    switch (api) {\n      case 'Wolfram': mainComponent = <WolframAlpha query={submittedQuery} />; break;\n      case 'Weather': mainComponent = <Weather query={submittedQuery} />; break;\n      default: mainComponent = <WolframAlpha query={submittedQuery} />;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__left\">\n          <APISelect sendAPI={this.setAPI} />\n        </div>\n        <div className=\"App__right\">\n          <form className=\"Form\" onSubmit={this.handleSubmit}>\n            <input className=\"Form__Searchbar\" type=\"text\" value={query} onChange={this.handleChange} placeholder=\"Search anything...\" />\n            <input className=\"Form__Submit\" type=\"submit\" value=\"&rarr;\" />\n          </form>\n          {mainComponent}\n          <FactOfTheDay />\n          <Notes />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}